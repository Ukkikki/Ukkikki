server:
  port: 8081
  servlet:
    context-path: /api
#S3 key
cloud :
  aws :
    credentials :
      accessKey : ENC(DMrxWMB7HK4CUX05ct2a3ltIEyE6WXCWbM6PjsAUsRc=)
      secretKey : ENC(JvFCxy8PXNGV3ClIf7e6sykNnaC7tcYSPJ5jnvInVsxwEYGuo9sO5mqCJ2Av+fyNqnxXo62uk0w=)

    #S3 bucketName
    s3 :
      bucketName : ENC(2j/G1rFMmHH9MFgSx4fwfQ==)
    #S3 location
    region :
      static : ENC(E5aWo1K77RUoLWpsi4kxGUxAd4mKBDI5)
    #cloud formation ??? ???? ?? ??.
    stack :
      auto : false

spring:
#  ?? ? ??? ?? ???? ?? => local
  profiles:
    active: local
    include: key
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  sql:
    init:
      mode: always
  servlet:
    multipart:
      max-file-size: -1
      max-request-size : -1

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

openai:
  api:
    key: ENC(/SrX6Kd5v3lr+0NOTKzm8gbQ4IWEVTYKsN5tmyo3gCVUzFNKJmpWq/XzSqF2+gtKryYlR5PbUERirkjSWuVag1MU7BG7eh1j)

---
# local ???? ?? ?
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: ${my-db.url}
    username: ${my-db.username}
    password: ${my-db.password}
    driver-class-name: ${my-db.driver-class-name}

---
# server ???? ???
spring:
  config:
    activate:
      on-profile: server
  datasource:
    url: ENC()
    username: ENC()
    password: ENC()
    driver-class-name: com.mysql.cj.jdbc.Driver



